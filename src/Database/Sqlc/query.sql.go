// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: query.sql

package ORM

import (
	"context"
	"database/sql"
)

const createAccount = `-- name: CreateAccount :one
INSERT INTO Account (
	uuid,
	username,
	password
) VALUES (
  ?, ?, ?
)
RETURNING uuid, teamuuid, username, password
`

type CreateAccountParams struct {
	Uuid     string
	Username string
	Password string
}

func (q *Queries) CreateAccount(ctx context.Context, arg CreateAccountParams) (Account, error) {
	row := q.db.QueryRowContext(ctx, createAccount, arg.Uuid, arg.Username, arg.Password)
	var i Account
	err := row.Scan(
		&i.Uuid,
		&i.Teamuuid,
		&i.Username,
		&i.Password,
	)
	return i, err
}

const createAwsCredential = `-- name: CreateAwsCredential :one
INSERT INTO AwsCredential (
  uuid,
  region,
	id,
	secret,
	bucketid,
	bucketprefix
) VALUES (
  ?, ?, ?, ?, ?, ?
)
RETURNING uuid, region, id, secret, bucketid, bucketprefix
`

type CreateAwsCredentialParams struct {
	Uuid         string
	Region       string
	ID           string
	Secret       string
	Bucketid     string
	Bucketprefix sql.NullString
}

func (q *Queries) CreateAwsCredential(ctx context.Context, arg CreateAwsCredentialParams) (AwsCredential, error) {
	row := q.db.QueryRowContext(ctx, createAwsCredential,
		arg.Uuid,
		arg.Region,
		arg.ID,
		arg.Secret,
		arg.Bucketid,
		arg.Bucketprefix,
	)
	var i AwsCredential
	err := row.Scan(
		&i.Uuid,
		&i.Region,
		&i.ID,
		&i.Secret,
		&i.Bucketid,
		&i.Bucketprefix,
	)
	return i, err
}
